name: Workflow

on: 
  push:
    branches: 
    - "develop"
    - "main"

# permissionsは、GitHub Actionsで利用するIAMロールに付与する権限を設定
permissions:
  id-token: write
  contents: read

env:
  ENV_VAR: ${{ github.ref == 'refs/heads/main' && 'prod' || github.ref == 'refs/heads/develop' && 'dev' || '' }}
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  PROJECT: ${{ secrets.PROJECT }}
  AWS_REGION: ap-northeast-1

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:

      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.21.4
          cache-dependency-path: go.sum

      - name: Set up QEMU for arm64
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Create Go modules cache
        uses: actions/cache@v4
        with:
          path: /home/runner/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}

      - name: Create go-build and cache
        uses: actions/cache@v4
        with:
          path: /home/runner/.cache/go-build
          key: ${{ runner.os }}-go-build-${{ hashFiles('**/go.sum') }}

      - name: Build Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: backend/docker/$ENV_VAR/Dockerfile 
          platforms: linux/arm64
          tags: $PROJECT_image:latest
          outputs: type=docker,dest=/tmp/$PROJECT_image.tar
          cache-from: type=gha
          cache-to: type=gha,mode=max

  push:
    runs-on: ubuntu-22.04
    steps:

      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up QEMU for arm64
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: $AWS_REGION
          role-to-assume: arn:aws:iam::$AWS_ACCOUNT_ID:role/$PROJECT-github-actions-role
          role-session-name: $PROJECT-github-actions

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Push image to ECR
        run: |
          docker load --input /tmp/$PROJECT_image.tar
          docker tag $PROJECT_image:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$PROJECT-private-repository:latest
          docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$PROJECT-private-repository:latest

  deploy:
    runs-on: ubuntu-22.04
    steps:

      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Deploy to ECS
        run: |
          echo "ENV: ${{ env.ENV_VAR }}"
          export ECS_CLUSTER="$PROJECT-ecs-cluster-$ENV_VAR"
          export ECS_SERVICE="$PROJECT-service-$ENV_VAR"
          echo "ECS_CLUSTER: $ECS_CLUSTER"
          echo "ECS_SERVICE: $ECS_SERVICE"
          aws ecs update-service --cluster $ECS_CLUSTER --service $ECS_SERVICE --force-new-deployment
